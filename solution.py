message = "order=open_all_chests"
bytes_message = bytes(message, "utf-8")
secret = bytes.fromhex("fbeaf9da4e204ed66093d38860980448")
mac = "50cb15dc7c9eac0d5532d78f3622c73d4369d803"

length_initial = 37 #length in bytes



def make_padding(length):
    tmp = [0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
    if length < 56:
        padding = tmp[0:(56-length%64)]
    else:
        padding = tmp[0:(64+56-len%64)]
    length = length << 3
    for i in range(8):
        padding.append(length >> (8*i))

    return padding

make_padding(length_initial)